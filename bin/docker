#!/usr/bin/env bash

__help() {
cat <<END_OF_HELP
Usage: ${0} <commands> [options]                  <> - required parameters
Where commands are:                               [] - optional parameters

  build <image-tag> [docker-build-options]
            Builds a new container image using 'docker image build' command.
            See 'docker image build --help' for a list of supported options.

  run <image-tag> [shell-command-and-options]
            Run a command in a new container with 'docker container run'.
            Container-run options are preconfigured, user input is executed.

  attach <image-tag> [docker-attach-options]
            Attaches input/output streams to an already running container.
            See 'docker container attach --help' for all supported options.

  exec <image-tag> [shell-command-and-options]
            Executes a command in a container which launched from the image.
            See 'docker container exec --help' for more information.

  stop <image-tag> [docker-stop-options]
            Stops all running containers based on the application's image.
            See 'docker container stop --help' for more information.

END_OF_HELP
}

IMAGE="ursadk/getopts_long"
DOCKER_CMD="${1}" && shift
TAG="${1:-latest}" && shift
case "${DOCKER_CMD}" in
  'b'|'build')
    docker image build --tag "${IMAGE}:${TAG}" --target "${TAG}" "${@}" "${PWD}";
    ;;
  'r'|'run')
    docker container run --rm --init -it -v "${PWD}:/mnt" "${IMAGE}:${TAG}" "${@}"
    ;;
  'a'|'attach')
    CONTAINER_ID="$(docker container ls -qlf "ancestor=${IMAGE}:${TAG}")"
    docker container attach "${@}" "${CONTAINER_ID}"
    ;;
  'e'|'exec')
    CONTAINER_ID="$(docker container ls -qlf "ancestor=${IMAGE}:${TAG}")"
    docker container exec -it "${CONTAINER_ID}" "${@}"
    ;;
  's'|'stop')
    CONTAINER_IDS="$(docker container ls -qf "ancestor=${IMAGE}:${TAG}")"
    [[ -n "${CONTAINER_IDS}" ]] && docker container stop "${@}" "${CONTAINER_IDS}"
    ;;
  ''|'help'|'-?'|'--help')
    __help >&2
    exit 1
    ;;
  *)
    echo "${0}: Unknown command -- ${DOCKER_CMD}" >&2
    exit 1
    ;;
esac
